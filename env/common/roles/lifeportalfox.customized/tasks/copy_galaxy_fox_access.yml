---

- name: Copy access use hpc home directory  page
  copy:
    src: "files/galaxy/fox_home_and_projects_access/galaxy.py"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/files/sources/galaxy.py"
  when: galaxy_server_dir is defined

- name: Copy edited posix file for cluster project directory page
  copy:
    src: "files/galaxy/fox_home_and_projects_access/posix.py"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/files/sources/posix.py"
  when: galaxy_server_dir is defined


# Block for file ..lib/galaxy/files/__init__.py 5 instances
- name: 1 Edit the file lib galaxy files init py Line 1 in method init
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/files/__init__.py"
             backup: yes
             insertafter: '.*ftp_upload_purge=True.*'
             line: "        list_cluster_directories_script=None,"

- name: 2 Edit the file lib galaxy files init py Line 2 in method init
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/files/__init__.py"
             backup: yes
             insertafter : '.*self.ftp_upload_purge = ftp_upload_purge.*'
             line: "        self.list_cluster_directories_script = list_cluster_directories_script"

- name: 3 Edit the file lib galaxy files init py Line in method from app config
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/files/__init__.py"
             backup: yes
             insertafter: '.*kwds\["ftp_upload_purge"\] = config.ftp_upload_purge.*'
             line: "        kwds[\"list_cluster_directories_script\"] = config.list_cluster_directories_script"

- name: 4 Edit the file lib galaxy files init py Line in method to dict
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/files/__init__.py"
             backup: yes
             insertafter: '.*"ftp_upload_purge": self.ftp_upload_purge.*'
             line: "            \"list_cluster_directories_script\": self.list_cluster_directories_script,"

- name: 5 Edit the file lib galaxy files init py Line in staticmethod method to dict
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/files/__init__.py"
             backup: yes
             insertafter: '.*ftp_upload_purge=as_dict\["ftp_upload_purge"\].*'
             line: "            list_cluster_directories_script=as_dict[\"list_cluster_directories_script\"]"

## Set ec01-galaxy-group GID (2102530) for dataset_path.real_path in ../files/x/y/x/dataset273848290.dat instead of ec-galaxy-group
- name: Set correct GID to the dataset in files x y dataset directory
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/jobs/__init__.py"
             backup: yes
             regexp: '^\s*util\.umask_fix_perms\(path, self\.app\.config\.umask, 0o666, self\.app\.config\.gid\).*$'
             line: "                util.umask_fix_perms(path, self.app.config.umask, 0o666, 2102530)"
             backrefs: yes

## Set ec01-galaxy-group GID (2102530) instead of the user/galaxy user group when executing external_chown
- name: Set correct GID to the dataset when executing external chown
  lineinfile:
             path: "{{ galaxy_server_dir }}/lib/galaxy/util/path/__init__.py"
             backup: yes
             regexp: '^\s*cmd\.extend\(\[path, pwent\[0\], str\(pwent\[3\]\)\]\).*$'
             line: "        cmd.extend([path, pwent[0], '2102530'])"
             backrefs: yes

## The two next modify the Permission denied message

# Set the {mark} for ansible blockinfile for Permission denied message
- name: Set BEGIN END markers for the new Permissions denied block
  lineinfile:
         path: "{{ galaxy_server_dir }}/lib/galaxy/managers/remote_files.py"
         backup: yes
         insertbefore:  '{{item.Before}}'
         line: "{{item.Line}}"
  with_items:
        - { Before: 'message = f"Problem listing file', Line: "### OPEN ANSIBLE MANAGED BLOCK ###"}
        - { Before: 'if format == RemoteFilesFormat.flat:', Line: "### CLOSE ANSIBLE MANAGED BLOCK ###"}



# Better display of permission denied
- name: Replace the message to Permission denied
  blockinfile:
   path: "{{ galaxy_server_dir }}/lib/galaxy/managers/remote_files.py"
   marker: "### {mark} ANSIBLE MANAGED BLOCK ###"
   marker_begin: "OPEN"
   marker_end: "CLOSE"
   block: |
           {% filter indent(width=8, first=true) %}
           ## Nikolay
           ## A better display of Permission denied error when trying to list cluster project directories
               if "list_cluster_directories_script" in self._app.config.config_dict and self._app.config.config_dict["list_cluster_directories_script"] is not None:
                   message = f"Permission denied {file_source_path.path}"
                   log.warning(message, exc_info=True)
                   raise exceptions.InternalServerError(message)
               else:
                   message = f"Problem listing file source path {file_source_path}"
                   log.warning(message, exc_info=True)
                   raise exceptions.InternalServerError(message)
           {% endfilter %}


- name: Add list_cluster_directories config schema yaml
  blockinfile:
    state: present
    insertafter: EOF
    dest: "{{ galaxy_server_dir }}/lib/galaxy/config/schemas/config_schema.yml"
    block: |
      {% filter indent(width=6, first=true) %}
      list_cluster_directories_script:
        type: str
        required: false
        desc: |
          Allows the users who have terminal access to a cluster to browse the storage directories of this
          cluster. These directories may be the user's home directory or the so called project storage
          directories owned by a posix group of the project. The script lists the directories on behalf
          of the user and only displays the content accessible for user's permissions. The browsed directory
          must be mounted on the galaxy server!!

          Example value 'sudo -E scripts/list_cluster_directories.py'
      {% endfilter %}
