---

- name: Set PostgreSQL dotless version fact
  set_fact:
    __postgresql_version_dotless: "{{ postgresql_version | replace('.', '') }}"
    __postgresql_command_sep: "{{ postgresql_version is version('10', '>=') | ternary('-', '') }}"

# Using the rpm URL format of the yum module causes Ansible to download the rpm
# every time to check whether it's installed, so, don't do that.
- name: Check pgdg repository package (RedHat)
  yum:
    name: "pgdg-redhat-repo"
  register: __postgresql_repo_pkg_installed_result
  ignore_errors: true

- name: Install repository key
  rpm_key:
    #key: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG
    key: https://download.postgresql.org/pub/repos/yum/keys/PGDG-RPM-GPG-KEY-RHEL
    state: present

- name: Install pgdg repository package (RedHat)
  yum:
    name: >-
      https://download.postgresql.org/pub/repos/yum/reporpms/{{ postgresql_pgdg_shortfamilies[ansible_distribution]
        | default("EL") }}-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}/pgdg-{{
        postgresql_pgdg_families[ansible_distribution] | default("redhat") }}-repo-latest.noarch.rpm
  register: __postgresql_yum_result
  until: __postgresql_yum_result is succeeded
  retries: 5
  delay: 5
  when: __postgresql_repo_pkg_installed_result is failed

- name: Install PostgreSQL (RedHat)
  yum:
    name: postgresql{{ __postgresql_version_dotless }}-server

- name: Check for pgdata directory
  stat:
    path: "{{ postgresql_pgdata }}/base"
  register: pgdata_stat
  failed_when: false

- name: Initialize database (RedHat >= 7)
  command: >-
     /bin/postgresql-setup --initdb
  when: >-
    ansible_distribution_major_version is version(7, '>=')
      and (pgdata_stat.stat.isdir is not defined or not pgdata_stat.stat.isdir)

- name: Install psycopg2
  yum:
    name: "python{{ ansible_python.version.major }}-psycopg2"
  when: postgresql_install_psycopg2
