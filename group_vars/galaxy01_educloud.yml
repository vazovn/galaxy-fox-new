---

# Python3 support
#pip_virtualenv_command: /bin/python3.11 -m venv --copies
pip_virtualenv_command: "{{ miniconda_prefix }}/envs/_galaxy_/bin/python3.11 -m venv --copies"

# Galaxy

# only for RHEL8 otherwise "true"
galaxy_create_user: false
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /cluster/galaxy/srv/galaxy
galaxy_virtualenv_command: "{{ miniconda_prefix }}/envs/_galaxy_/bin/virtualenv -p {{ miniconda_prefix }}/envs/_galaxy_/bin/python3.11"

galaxy_user: {name: "{{ galaxy_user_name }}", shell: /bin/bash, uid: 2100096}
galaxy_user_group: "ec01-galaxy-group"
galaxy_privsep_user: "{{ galaxy_user_name }}"

galaxy_commit_id: release_23.1
galaxy_force_checkout: true

########################################################

# Nginx
### variables that are used in the galaxy.conf templates
### if no ssl, leave the ssl_cert_path and ssl_key_path empty
use_ssl: true
# ssl_cert_path:  /etc/pki/tls/certs/galaxy01_educloud_no.crt
# ssl_key_path: /etc/pki/tls/private/galaxy01.educloud.no.key

# Galaxy

# only for RHEL8 otherwise "true"

galaxy_manage_mutable_setup: true
galaxy_manage_database: true
galaxy_fetch_dependencies: true

galaxy_manage_systemd: true
# If installing on a root_squash, you need to enable the galaxy user to set up the galaxy.service
# and set galaxy_systemd_root to false, ..tasks/systemd_galaxy.yml is defining this
galaxy_systemd_root: false

galaxy_manage_systemd_reports: false

# If the host needs a tunnel to connect to the external world, set to true.
# It will run the task "Modify Makefile in galaxy server directory" in lifeportalfox.customized role
galaxy_use_tunnel: false

# Server dir
galaxy_server_dir: "{{ galaxy_root }}/server"

# Gunicorn socket directory
gunicorn_dir: /gunicorn

# All data dir : job dirs, files, tmp, tools, etc.
galaxy_lifeportal_data_dir: /cluster/galaxy-data-prod

# -- General tool related dirs --
tools_root: "{{ galaxy_lifeportal_data_dir }}/tools/prod"
tool_config_dir: "{{ tools_root }}/tool_config"
tool_data_path: "{{ tools_root }}/tool_locs"
tool_dependency_cache_dir: "{{ tools_root }}//tool_dependencies/_cache"
tool_dependency_dir: "{{ tools_root }}/tool_dependencies"
tool_cache_data_dir: "{{ galaxy_root }}/var/cache/tool_cache"
tool_search_index_dir: "{{ galaxy_root }}/var/cache/tool_search_index"
ucsc_build_sites: "{{ galaxy_root }}/server/tool-data/shared/ucsc/ucsc_build_sites.txt.sample"
visualization_plugins_directory: "{{ galaxy_root }}/server/config/plugins/visualizations"

## -- Miniconda needed for cross-platform copy of Python and Galaxy's venv -- ##
# All other settings are in galaxyproject.miniconda role : defaults/main.yml
miniconda_prefix: "/cluster/galaxy/_conda"

# Source and target file directories for oidc backends
galaxy_oidc_backend_files_src_dir: files/galaxypython3.11/oidc_files/
galaxy_oidc_backend_files_target_dir: "{{ galaxy_venv_dir }}/lib/python3.11/site-packages/social_core/backends/"

# Paths to real user setup files
galaxy_scripts_dir: /cluster/galaxy-data-prod/scripts
galaxy_scripts_src_dir: files/galaxy/scripts

galaxy_config:
  galaxy:
    # --Admin-------------------------------------------------
    brand: "GALAXY-FOX-portal"
    admin_users: ec-nikolaiv@educloud.no,ec-torfin@educloud.no,ec-sabryr@educloud.no
    check_migrate_tools: false
    use_remote_user: false
    allow_user_impersonation: true
    require_login: true
    allow_user_dataset_purge: true
    expose_dataset_path: true
    password_expiration_period: 0
    session_duration: 0
    allow_user_deletion: true
    enable_quotas: true
    allow_user_creation: false
    show_welcome_with_login: true

## -- DB -------------------------------------------------
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"



# -- Authentication -------------------------------------------
    user_activation_on: false
    smtp_server: smtp.uio.no
    error_email_to: n.a.vazov@usit.uio.no
    ## email_from is compulsory, otherwise the job error report (from bug icon) sending fails
    email_from: Galaxy-Fox <ec-galaxy@educloud.no>
    activation_grace_period: 0

    # -- OiDC support-(see backend files below)------------------------------------------
     # Enables and disables OpenID Connect (OIDC) support.
    enable_oidc: true
    # Sets the path to OIDC configuration file.
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    # Sets the path to OIDC backends configuration file.
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    # Use this file to remove the email/password/login_button promt
    auth_config_file: "{{ galaxy_config_dir }}/auth_conf.xml"

# --Standard Config-------------------------------------------
    welcome_url: /static/welcome.html
    galaxy_infrastructure_url: https://galaxy01.educloud.no

# -- File sources config
    file_sources_config_file: "{{ galaxy_config_dir }}/file_sources_conf.yml"

# -- Enable listing of cluster directories as real user ----------------------------------------
    list_cluster_directories_script: "sudo -E {{ galaxy_scripts_dir }}/list_cluster_directories.py"

# -- Cluster partition based directories -----------------------------./roles/galaxyproject.galaxy/vars/layout-root-dir.yml:__galaxy_venv_dir: "{{ galaxy_root }}/venv"

    file_path: "{{ galaxy_lifeportal_data_dir }}/files"
    new_file_path: "{{ galaxy_lifeportal_data_dir }}/tmp"
    template_cache_path: "{{ galaxy_lifeportal_data_dir }}/compiled_templates"
    job_working_directory: "{{ galaxy_lifeportal_data_dir }}/jobs_directory"
    cluster_files_directory: "{{ galaxy_lifeportal_data_dir }}/slurm"

    ## New feature
    object_store_store_by: uuid

# --  Jobs Configuration ----------------------------------------

    # SABRY's files from Lifeportal SAGA

    job_config_file: "{{ tools_root }}/tool_config/lifeportal_job_conf.yml"
    job_resource_params_file: "{{ tools_root }}/tool_config/lifeportal_job_resource_conf.xml"
    job_metrics_config_file: "{{ galaxy_root }}/server/config/job_metrics_conf.xml.sample"

    # job_config_file: "{{ tools_root }}/tool_config/job_conf.xml"
    # job_resource_params_file:  "{{ tools_root }}/tool_config/job_resource_params_conf.xml"

    cleanup_job: never

# -- Run jobs as real user setup ----------------------------------------
    outputs_to_working_directory: true

    real_system_username: username
    ## Check that the two following lines are not spread on two consecutive lines""
    drmaa_external_runjob_script: "sudo -E DRMAA_LIBRARY_PATH=/drmaa/lib/libdrmaa.so.1  {{ galaxy_scripts_dir }}/drmaa_external_runner.py --assign_all_groups"
    drmaa_external_killjob_script: "sudo -E DRMAA_LIBRARY_PATH=/drmaa/lib/libdrmaa.so.1  {{ galaxy_scripts_dir }}/drmaa_external_killer.py --assign_all_groups"
    ## DO NOT ADD "--assign_all_groups" to external_chown_script!!!
    external_chown_script: "sudo -E DRMAA_LIBRARY_PATH=/drmaa/lib/libdrmaa.so.1  {{ galaxy_scripts_dir }}/external_chown_script.py"


# -- Tool Configuration----------------------------------------

    # SABRY's files from Lifeportal SAGA

    tool_data_table_config_path: "{{ tool_config_dir }}/lifeportal_genomes_conf.xml"
    tool_config_file: "{{ tool_config_dir }}/lifeportal_tool_conf.xml,{{ tool_config_dir }}/lifeportal_general_tool_conf.xml"
    integrated_tool_panel_config: "{{ tool_config_dir }}/integrated_tool_panel.xml"
    datatypes_config_file: "{{ galaxy_root }}/server/config/datatypes_conf.xml.sample"


    # This block is new - after 21.09. It means that the packages (the PATHs)
    # will be resolved as being located in the 'tool_dependency_dir' and binaries' PATH will
    # be derived from the <requirement> block in the respective tool wrapper file. Version is mandatory

    dependency_resolvers:
      - type: galaxy_packages
        versionless: false
        base_path: "{{Â tool_dependency_dir }}"


  gravity:
    service_command_style: gravity
    use_service_instances: true
    log_dir: "{{ galaxy_lifeportal_data_dir }}/gravity/log"
    app_server: gunicorn

    process_manager: systemd
    galaxy_root: "{{ galaxy_root }}/server"
    galaxy_user: "{{ galaxy_user_name }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    umask: '047'
    gunicorn:

      enable: true

      # listening options
      bind: "unix:{{ gunicorn_dir }}/gunicorn.sock"
      # performance options
      workers: 2
      # Other options that will be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      extra_args: '--forwarded-allow-ips="*"'
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true
    celery:

      enable: true
      enable_beat: true
      queues: celery,galaxy.internal,galaxy.external

      concurrency: 2
      loglevel: DEBUG

    handlers:
      handler:
        processes: 2
        pools:
          - job-handlers
          - workflow-schedulers


# -- Galaxy dirs ---------------------
galaxy_dirs:
  - "{{ galaxy_mutable_data_dir }}"
  - "{{ galaxy_mutable_config_dir }}"
  - "{{ galaxy_cache_dir }}"
  - "{{ galaxy_shed_tools_dir }}"
  - "{{ galaxy_tool_dependency_dir }}"
  - "{{ galaxy_file_path }}"
  - "{{ galaxy_job_working_directory }}"
  - "{{ tools_root }}"
  - "{{ tool_config_dir }}"
  - "{{ tool_data_path }}"
  - "{{ tool_dependency_cache_dir }}"
  - "{{ tool_dependency_dir }}"
  - "{{ tool_cache_data_dir }}"
  - "{{ tool_search_index_dir }}"

#
# #-- Galaxy Config Files-----------------------------------
galaxy_config_files:

  - src: files/galaxy/config/datatypes_conf.xml
    dest: "{{ galaxy_root }}/config/datatypes_conf.xml"

  - src: files/galaxy/config/oidc_backends_config.xml
    dest: "{{ galaxy_root }}/config/oidc_backends_config.xml"

  - src: files/galaxy/config/oidc_config.xml
    dest: "{{ galaxy_root }}/config/oidc_config.xml"

  - src: files/galaxy/config/auth_conf.xml
    dest: "{{ galaxy_root }}/config/auth_conf.xml"

  - src: files/galaxy/config/file_sources_conf.yml
    dest: "{{ galaxy_root }}/config/file_sources_conf.yml"

# -- Local Tools ----------------------------------------
galaxy_local_test_tools:
  - testing_static_slurm.xml


# -- OIDC backend items (files) ----------------------------------------
galaxy_oidc_backend_files:
  - lifeportal_fox.py

# -- REAL USER setup files ----------------------------------------
# in lifeportal_customized.galaxy/tasks/main.yml?
galaxy_scripts_files:
  - src: "{{ galaxy_scripts_src_dir}}/drmaa_external_killer.py"
    dest: "{{ galaxy_scripts_dir }}/drmaa_external_killer.py"
  - src: "{{ galaxy_scripts_src_dir }}/drmaa_external_runner.py"
    dest: "{{ galaxy_scripts_dir }}/drmaa_external_runner.py"
  - src: "{{ galaxy_scripts_src_dir }}/external_chown_script.py"
    dest: "{{ galaxy_scripts_dir }}/external_chown_script.py"
  - src: "{{ galaxy_scripts_src_dir }}/list_cluster_directories.py"
    dest: "{{ galaxy_scripts_dir }}/list_cluster_directories.py"

# -- LMOD activation scripts ----------------------------------------
lmod_activation_scripts:
  - z00_lmod.sh
  - z01_StdEnv.sh
#
# #-- Dynamic Job Rules Files------------------------------
galaxy_dynamic_job_rules:
  - generate_slurm_job_params.py
  - destinations.py
#
# # systemd
# #galaxy_systemd_mode: mule - defined in defaults/main.yml
# __galaxy_systemd_memory_limit_merged:
#     mule: 32
# galaxy_systemd_env: [DRMAA_LIBRARY_PATH="/drmaa/lib/libdrmaa.so.1"]
# #galaxy_restart_handler_name: - defined in defaults/main.yml
#

# --  NGINX --------------
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - galaxy
nginx_enable_default_server: false
nginx_conf_http:
  client_max_body_size: 1g
  # gzip: "on" # This is enabled by default in Ubuntu, and the duplicate directive will cause a crash.
  gzip_proxied: "any"
  gzip_static: "on"   # The ngx_http_gzip_static_module module allows sending precompressed files with the ".gz" filename extension instead of regular files.
  gzip_vary: "on"
  gzip_min_length: 128
  gzip_comp_level: 6  # Tradeoff of better compression for slightly more CPU time.
  gzip_types: |
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    image/png
    image/svg+xml
    image/x-icon
nginx_conf_ssl_certificate: /etc/pki/tls/certs/galaxy01_educloud_no.crt
nginx_conf_ssl_certificate_key: /etc/pki/tls/private/galaxy01.educloud.no.key
