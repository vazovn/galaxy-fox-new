

=== About handlers

Sometimes you want a task to run only when a change is made on a machine. For example, you may want to restart a service if a task updates the configuration of that service, but not if the configuration is unchanged. Ansible uses handlers to address this use case. Handlers are tasks that only run when notified.

https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_handlers.html

There are three files in roles/galaxyproject.galaxy/handlers

- gravity_22-05.yml
- gravity_23.0.yml

called by:

- main.yml

The handlers are launched in two ways:

1. at any time of the playbook execution, by some task whose definition ends in "notify", which starts the handler:

    e.g. task file

    - name: Deploy Galaxy Unit
      ...
      notify:
        - restart galaxy

    the handler file, e.g. main.yml contains a handler task with a "listen" statement

    - name: galaxy mule restart
      systemd:
          name: galaxy.service
          state: restarted
          scope: "{{ galaxy_systemd_root | ternary(omit, 'user') }}"
      when: "galaxy_systemd_mode == 'mule' and galaxy_manage_systemd"
      listen: "restart galaxy"

2. after all the roles have been executed and before the post-tasks, by the main.yaml file in handlers directory


In our playbook, the handlers which are executed after the roles, are located in handlers/main.yml:

- galaxy mule restart (fails because we use gravity, not mules)
- gravity_22-05.yml (fails because we use v 23.0)
- gravity_23.0.yml


=== Our setup

The last handler cannot use "graceful" command because it fails to find the socket files in /gunicorn. It works with the command "restart" instead. Be patient, there is an almost 2-3 min delay before the framework becomes operational as it takes about this time to install gravity and generate the socket files in /gunicorn. Every launch of the playbook stops gravity and the socket files disappear from the /gunicorn directory which results in faulure if we run the playbook with "graceful" command. "Graceful" needs socket files.

Yet, once started, the command "galaxyctl graceful" can be used for the subsequent restarts. There is no need to restart nginx if we wait long enough.

==== To understand :)

There are two handlers in handlers/main.yml : "systemd daemon reload" and "galaxy systemd start" which shall be launched from the task "systemd-galaxy.yml". There is no debug info about them, but if I deactivate them, the playbook throws errors when installing packages. I assume it restarts the daemon after each installation.

