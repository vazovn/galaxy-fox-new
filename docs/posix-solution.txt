

After enabling these steps the parameter will be
accessible from posix.py by calling the _list_posix_dirs


=================================================== 1 ==============================================================

Set the variable list_cluster_directories_script

a)
# -- Enable listing of cluster directories as real user ----------------------------------------
list_cluster_directories_script: "sudo -E /cluster/galaxy-data-prod/scripts/list_cluster_directories.py"

b)
galaxy_scripts_files:

...
  - src: "{{ galaxy_scripts_src_dir }}/list_cluster_directories.py"
    dest: "{{ galaxy_scripts_dir }}/list_cluster_directories.py"


SOLUTION: add in the ansible group_vars/galaxy01_educloud_test.yml


=================================================== 2 ==============================================================

make the parameter "list_cluster_directories_script" from group_vars/galaxy01_educloud_test.yml file accessible from the galaxy code

lib/galaxy/config/schemas/config_schema.yml

      list_cluster_directories_script:
        type: str
        required: false
        desc: |
          Allows the users who have terminal access to a cluster to browse the storage directories of this
          cluster. These directories may be the user's home directory or the so called project storage
          directories owned by a posix group of the project. The script lists the directories on behalf
          of the user and only displays the content accessible for user's permissions. The browsed directory
          must be mounted on the galaxy server!!

          Example value 'sudo -E scripts/list_cluster_directories.py'

SOLUTION: add block by ansible below


=================================================== 3 ==============================================================

Add self.list_cluster_directories_script parameter to ConfiguredFileSourcesConfig class
This it can be retrieved in the file upload procedure

lib/galaxy/files/__init__.py

SOLUTION: insert by ansible? All Nikolay lines - 5 instances in class ConfiguredFileSourcesConfig:


======================================================= 4 ============================================================

Set the variable file_sources_config_file: "{{ galaxy_config_dir }}/file_sources_conf.yml"

# -- File sources config
file_sources_config_file: "{{ galaxy_config_dir }}/file_sources_conf.yml"

# #-- Galaxy Config Files-----------------------------------
galaxy_config_files:
....
  - src: files/galaxy/config/file_sources_conf.yml
    dest: "{{ galaxy_root }}/config/file_sources_conf.yml"

SOLUTION: add in the ansible group_vars/galaxy01_educloud_test.yml

=================================================== 5 ==============================================================

Edit the file file_sources_conf.yml in your ansible playbook.

SOLUTION : copy new file from ansible /files/galaxy/config


=================================================== 6 ==============================================================

filter the display of the "Chose remote files" - Access FOX projects

lib/galaxy/files/sources/posix.py

SOLUTION: copy new file from ansible /files/galaxy/fox_and_project_access


=================================================== 7 ==============================================================

A better display of "Permission denied" error when trying to list cluster project directories

lib/galaxy/managers/remote_files.py

        except Exception:
            ## Nikolay added for better error display
            if "list_cluster_directories_script" in self._app.config.config_dict and self._app.config.config_dict["list_cluster_directories_script"] is not None:
                message = f"Permission denied {file_source_path.path}"
                log.warning(message, exc_info=True)
                raise exceptions.InternalServerError(message)
            else:
                message = f"Problem listing file source path {file_source_path}"
                log.warning(message, exc_info=True)
                raise exceptions.InternalServerError(message)


SOLUTION: add if condition after "except Exception" by ansible



=================================================== 8 ==============================================================

Enable upload of Fox projects and Fox home - the two last classes

lib/galaxy/files/sources/galaxy.py

SOLUTION: copy new file from ansible /files/galaxy/fox_and_project_access


=================================================== 9 ==============================================================

Edit the galaxy sudoers file /etc/sudoers.d/ec-galaxy

SOLUTION: add line

ec-galaxy  ALL = (root) NOPASSWD: SETENV:  /cluster/galaxy-data-prod/scripts/list_cluster_directories.py


=================================================== 10 ==============================================================

Create the list_cluster_directories.py itself and put it into /scripts/ (/cluster/galaxy-data-prod/scripts)

SOLUTION: copy new file from ansible /files/galaxy/scripts

=================================================== 11 ==============================================================

Add info about the new script into main playbook ansible file galaxy-educloud.yml

SOLUTION: add

- chown root:ec01-galaxy-group list_cluster_directories.py


=================================================== 12 ==============================================================

Mount homes and projects to the galaxy server /etc/fstab

aspasia.ad.fp.educloud.no:/fp/homes01/        /fp/homes01              nfs ro,bg,hard,intr,tcp,nfsvers=3
aspasia.ad.fp.educloud.no:/fp/projects01         /fp/projects01         nfs ro,bg,hard,intr,tcp,nfsvers=3



========================= Import Directories solution ================

Files from homes can be imported using the import libraries:

1.
Create 
/cluster/galaxy-data-prod/libraries/user_uploads
/cluster/galaxy-data-prod/libraries/admin_uploads
with
drwxrwsr-x. 2 ec-galaxy ec01-galaxy-group

2.
Add the following lines to galaxy.yml

    user_library_import_dir_auto_creation: true
    library_import_dir: /cluster/galaxy-data-prod/libraries/admin_uploads
    user_library_import_dir: /cluster/galaxy-data-prod/libraries/user_uploads
    user_library_import_symlink_allowlist: /fp/homes01/u01/ec-nikolaiv,/fp/homes01/u01/ec-torfin
    
The list in user_library_import_symlink_allowlist contains all homes. After these changes galaxy must be restarted

3.
In /cluster/galaxy-data-prod/libraries/user_uploads
run, for ec-nikolaiv, and for all other users respectively
ln -s /fp/homes01/u01/ec-nikolaiv ec-nikolaiv@educloud.no
Thus, the requirement that the dirs in user_uploads shall have the emails of the users is satisfied.
The symlink solution works only if the symlink name is a user email! No other symlinks will work.


