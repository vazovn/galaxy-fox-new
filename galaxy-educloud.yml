---

- hosts: dbservers
  become: true
  become_user: root
  pre_tasks:
    - name: Install Dependencies
      package:
        name: 'acl'
  roles:
     - role: galaxyproject.postgresql
       __postgresql_version_dotless:  ""
     - role: galaxyproject.postgresql_objects
       become: true
       become_user: postgres


- hosts: galaxy01_educloud
  become: true
  vars:
      galaxy_diff_mode_verbose: true
      CLIENT_ID: "{{ client_id }}"
      CLIENT_SECRET: "{{ client_secret }}"

  pre_tasks:
    - name: Install Dependencies
      package:
        name: ['acl', 'bzip2', 'git', 'make', 'python3-psycopg2', 'tar', 'python3-virtualenv', 'python3-setuptools']
    - name: Enable or reenable linger for ec-galaxy user (needed for user systemd setup)
      shell:
            "if [[ $(loginctl list-users | grep 'ec-galaxy') == *2100096* ]]; then loginctl disable-linger ec-galaxy && sleep 5 && loginctl enable-linger ec-galaxy; else loginctl enable-linger ec-galaxy; fi"
      become_user: "{{ galaxy_user_name }}"
    ## In case of root_squash galaxy partition drmaa has to be installed system wide, the venv installed copy will not be usable by
    ## ec-galaxy which escalates to root
    - name: Install drmaa for Python 3
      ansible.builtin.pip:
        name: drmaa
        executable: pip3
    - name: Install the 'Development tools' package group
      ansible.builtin.yum:
         name: "@Development tools"
         state: present

  roles:
     - role: galaxyproject.miniconda
       become: true
       become_user: "{{ galaxy_user_name }}"
     - role: galaxyproject.galaxy
       become: true
       become_user: "{{ galaxy_user_name }}"
     # customized tasks
     - role: lifeportalfox.customized
       become: true
       become_user: "{{ galaxy_user_name }}"
     - role: galaxyproject.nginx
       become: yes
       become_user: root
     # - role: slurmdrmaa.galaxy
     #   become: yes
     #   become_user: root
     - role: galaxyproject.gxadmin

  post_tasks:

    - name: Change data folder ownership
      become: true
      become_user: root
      command: "{{ item }} chdir=/cluster/galaxy-data-prod"
      with_items:
      - chown -R ec-galaxy:ec01-galaxy-group compiled_templates
      - chown -R ec-galaxy:ec01-galaxy-group files
      - chown -R ec-galaxy:ec01-galaxy-group jobs_directory
      - chown -R ec-galaxy:ec01-galaxy-group tmp
      - chown -R ec-galaxy:ec01-galaxy-group tools
      - chown ec-galaxy:ec01-galaxy-group scripts
      changed_when: false

    - name: Change data folder mode
      become: true
      become_user: root
      command: "{{ item }} chdir=/cluster/galaxy-data-prod"
      with_items:
      - chmod -R 750 compiled_templates
      - chmod -R 730 files
      - chmod -R g+s files
      - chmod -R 730 jobs_directory
      - chmod -R g+s jobs_directory
      - chmod -R 777 tmp
      - chmod -R g+s tmp
      - chmod -R 750 tools
      - chmod -R 500 scripts
      changed_when: false

    - name: Change ownership to scripts folder
      become: true
      become_user: root
      command: "{{ item }} chdir=/cluster/galaxy-data-prod/scripts/"
      with_items:
      - chown root:ec01-galaxy-group drmaa_external_runner.py
      - chown root:ec01-galaxy-group drmaa_external_killer.py
      - chown root:ec01-galaxy-group external_chown_script.py
      - chown root:ec01-galaxy-group list_cluster_directories.py
      changed_when: false

    - name: Set 500 to the permission escalating scripts used for real user setup
      become: true
      become_user: root
      command: "{{ item }} chdir=/cluster/galaxy-data-prod/scripts/"
      with_items:
      - chmod 500 drmaa_external_runner.py
      - chmod 500 drmaa_external_killer.py
      - chmod 500 external_chown_script.py
      changed_when: false

  #
  #   # Enable the following variable in the terminal of the remote host (galaxy01.edicloud.no) in order to run
  #   # systemctl --user status galaxy and othe systemctl commands as ec-galaxy user
  #   # XDG_RUNTIME_DIR: "/run/user/{{ galaxy_user_name.uid }}"
  #   # export XDG_RUNTIME_DIR=/run/user/2100096
  #   ## Then as ec-galaxy user run
  #   ## systemctl --user status galaxy
